<?php

namespace Numa\DOAAdminBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ListingFieldTreeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ListingFieldTreeRepository extends EntityRepository {

    public function getJsonTreeModels($fieldId, $root = 1, $deep = 2) {
        $qb = $this->getManager()
                ->createQueryBuilder();
        $query = $qb->select('tp')
                ->from('NumaDOAAdminBundle:ListingFieldTree', 'tp')
                ->where('tp.listing_field_id=:field_id')
                ->setParameter('field_id', $fieldId)
                ->orderBy('tp.name','DESC')
                ->getQuery();
        ;
        

        $results = $query->getResult();
        $jsonArray = array();
        foreach ($results as $res) {
            foreach ($res->getChildren() as $children) {
                $name = str_replace(array("'", ".", ",", "}", "{", "\""), "", $children->getName());
                $jsonArray[$res->getId()][] = array($children->getId() => $name);
            }
        }


        return json_encode($jsonArray);
    }

    public function findAllBy($fieldId) {
        $qb = $this->getEntityManager()
                ->createQueryBuilder();
        $qb->select('t')
                ->from('NumaDOAAdminBundle:ListingfieldTree', 't')
                //->join('NumaDOAAdminBundle:Listingfield', 'l')
                ->where('t.listing_field_id=:fieldid')
                ->andWhere('t.parent is NULL')
                ->orderBy('t.name', 'DESC')
                //->andWhere('t.caption like :property')
                ->setParameter('fieldid', $fieldId);
        ;
//        $res = array();
//        if ($result) {
//            $result = $qb->getQuery()->getResult();
//            foreach ($result as $key => $value) {
//                $res[$value->getName()] = $value->getName();
//            }
//
//            return $res;
//        }
//        ;
        //dump($qb->getQuery());die();
        return $qb;
    }

    /**
     * 
     * @param type $propertyName
     * @param type $listing_field_id
     * @return type
     */
    public function findOneByValue($propertyName, $listing_field_id) {

        $q = 'SELECT t FROM NumaDOAAdminBundle:ListingfieldTree t WHERE 
                    ( t.listing_field_id = ' . $listing_field_id . ' AND
                    (t.name like \'' . $propertyName . '\'  OR 
                     t.name like \'%' . $propertyName . '%\'     )) ';
        $query = $this->getEntityManager()
                        ->createQuery($q)->setMaxResults(1);
        $res = $query->getOneOrNullResult(); //getOneOrNullResult();
        return $res;
    }

}
