//var app = angular.module('myApp', ['angular-loading-bar']);
var app = angular.module('myApp', []);
var names = [];
function parseFloatx(num) {
    num = num || 0;
    if (isNaN(num)) {
        num = parseFloat(0);
    }
    return parseFloat(num);

}
app.controller('myCtrl', function ($scope, $http, $element) {
    $scope.stock = "";
    {% if  max_invoive_nr is defined %}
    $scope.invoice_nr = "{{ max_invoive_nr }}";
    {% endif %}
    {% if id is defined and id is not empty %}
    $http.get("/api/billing/{{ id }}/single")
            .then(function (response) {

                if (response.data._item) {

                    $scope.VIN = response.data._item._v_i_n;
                    $scope.stock = response.data._item.stock_nr;
                    $scope.item_id = response.data._item.id;
                    $scope.listingyear = response.data._item.year;
                    $scope.listingmake = response.data._item.make;
                    $scope.listingmodel = response.data._item.model;

                    $scope.color = response.data._item.exterior_color;
                    $scope.new = "";
                    $scope.used = "";
                    if (response.data._item.status == 'Used') {

                        $scope.used = "X";
                    } else {
                        $scope.new = "X";
                    }
                }

                $scope.billing_date = response.data.billing_date;
                $scope.sales_person = response.data.sales_person;
                $scope.trim = response.data.trim;
                $scope.dealer_nr = response.data.dealer_nr;
                $scope.invoice_nr = response.data.invoice_nr;
                $scope.tid_make = response.data.tid_make;
                $scope.tid_model = response.data.tid_model;
                $scope.tid_color = response.data.tid_color;
                $scope.tid_year = response.data.tid_year;
                $scope.tid_km = response.data.tid_km;
                $scope.tid_vin = response.data.tid_vin;
                $scope.tid_milleage = response.data.tid_milleage;
                $scope.payableto = response.data.payableto;
                $scope.address = response.data.address;
                $scope.address2 = response.data.address2;
                $scope.amount = response.data.amount;
                $scope.total = response.data.total;
                $scope.less_discount = response.data.less_discount;
                $scope.options_total_cost = response.data.options_total_cost;
                $scope.sale_price = parseFloatx(response.data.sale_price).toFixed(2);
                $scope.admin_fee = parseFloatx(response.data.admin_fee).toFixed(2);
                $scope.warranty = parseFloatx(response.data.warranty).toFixed(2);
                $scope.new_warranty = parseFloatx(response.data.new_warranty).toFixed(2);
                $scope.used_warranty = parseFloatx(response.data.used_warranty).toFixed(2);
                $scope.protection_pkg = parseFloatx(response.data.protection_pkg).toFixed(2);
                $scope.tos_total = parseFloatx(response.data.tos_total).toFixed(2);
                $scope.less_trade_in = parseFloatx(response.data.less_trade_in).toFixed(2);
                $scope.difference_payable = parseFloatx(response.data.difference_payable).toFixed(2);
                $scope.tax1 = parseFloatx(response.data.tax1).toFixed(2);
                $scope.tax2 = parseFloatx(response.data.tax2).toFixed(2);
                $scope.tax3 = parseFloatx(response.data.tax3).toFixed(2);
                $scope.taxt1_name = response.data.taxt1_name;
                $scope.taxt2_name = response.data.taxt2_name;
                $scope.taxt3_name = response.data.taxt3_name;

                $scope.other_misc1 = parseFloatx(response.data.other_misc1).toFixed(2);
                $scope.other_misc2 = parseFloatx(response.data.other_misc2).toFixed(2);
                $scope.other_misc1_name = "PST Tax";
                $scope.other_misc2_name = "GST Tax";
                $scope.taxes_paid_total = parseFloatx(response.data.taxes_paid_total).toFixed(2);
                $scope.lien_on_trade_in = parseFloatx(response.data.lien_on_trade_in).toFixed(2);
                $scope.total_due = parseFloatx(response.data.total_due).toFixed(2);
                $scope.less_trade_in_tax = parseFloatx(response.data.less_trade_in_tax).toFixed(2);
                $scope.lien_on_trade_in = parseFloatx(response.data.lien_on_trade_in).toFixed(2);
                $scope.less_deposit = parseFloatx(response.data.less_deposit).toFixed(2);
                $scope.payable_on_delivery = parseFloatx(response.data.payable_on_delivery).toFixed(2);
                $scope.balance_to_finance = parseFloatx(response.data.balance_to_finance).toFixed(2);
                $scope.insurance = parseFloatx(response.data.insurance).toFixed(2);
                $scope.total_balance_due = parseFloatx(response.data.total_balance_due).toFixed(2);
                $scope.bank_registration_fee = parseFloatx(response.data.bank_registration_fee).toFixed(2);
                $scope.life_insurance = parseFloatx(response.data.life_insurance).toFixed(2);
                $scope.disability_insurance = parseFloatx(response.data.disability_insurance).toFixed(2);
                $scope.work_order = response.data.work_order;

                $scope.opt1 = response.data.opt1;
                $scope.opt2 = response.data.opt2;
                $scope.opt3 = response.data.opt3;
                $scope.opt4 = response.data.opt4;
                $scope.opt5 = response.data.opt5;
                $scope.opt6 = response.data.opt6;
                $scope.opt7 = response.data.opt7;
                $scope.opt8 = response.data.opt8;
                $scope.opt9 = response.data.opt9;
                $scope.opt10 = response.data.opt10;

                $scope.opteq1 = response.data.opteq1;
                $scope.opteq2 = response.data.opteq2;
                $scope.opteq3 = response.data.opteq3;
                $scope.opteq4 = response.data.opteq4;
                $scope.opteq5 = response.data.opteq5;
                $scope.opteq6 = response.data.opteq6;
                $scope.opteq7 = response.data.opteq7;
                $scope.opteq8 = response.data.opteq8;
                $scope.opteq9 = response.data.opteq9;
                $scope.opteq10 = response.data.opteq10;

            });
    {% endif %}

    $scope.change = function (field) {

        $scope.find = $scope.stock;

        if (field == 'vin') {
            $scope.find = $scope.VIN;
        }

        console.log($scope.find);
        if ($scope.find.length == 0) {
            $scope.listingyear = "";
            $scope.listingmake = "";
            $scope.listingmodel = "";
            $scope.listingmileage = "";
            $scope.listingtrim = "";
            $scope.VIN = "";
            $scope.stock = "";
            $scope.item_id = "";

            $scope.color = "";
            $scope.new = "";
            $scope.used = "";
        }
        if ($scope.find.length > 2) {

            $http.get("/api/listings/" + $scope.find + "/uniques.json?field=" + field)
                    .then(function (response) {
                        //$scope.stock = response.data;

                        names = [];

                        for (i = 0; i < response.data.length; i++) {
                            //names[i]=response.data[i].stock_nr;
                            name = response.data[i].stock_nr;
                            if (field == 'vin') {
                                name = response.data[i]._v_i_n;
                            }
                            names.push(name);

                        }

                        var uniqueNames = [];
                        $.each(names, function (i, el) {
                            if ($.inArray(el, uniqueNames) === -1) uniqueNames.push(el);
                        });
                        console.log(uniqueNames);
                        console.log(names);
                        $("#stock-autocomplete").autocomplete({
                            source: names
                        });
                        $scope.stockcount = response.data.length;
                        if (uniqueNames.length == 1) {
                            $scope.listingyear = response.data[0].year;
                            $scope.listingmake = response.data[0].make;
                            $scope.listingmodel = response.data[0].model;
                            $scope.listingmileage = response.data[0].mileage;
                            $scope.listingtrim = response.data[0].trim;
                            $scope.VIN = response.data[0]._v_i_n;
                            $scope.stock = response.data[0].stock_nr;
                            $scope.item_id = response.data[0].id;

                            $scope.color = response.data[0].exterior_color;
                            $scope.new = "";
                            $scope.used = "";
                            if (response.data[0].status == 'Used') {

                                $scope.used = "X";
                            } else {
                                $scope.new = "X";
                            }

                        }

                    });

        }

    }
    {#total = sale price + doc fee + warranty +protection pkg#}
    {#difference payable = total - less trade in#}
    {#taxes paid total = PST tax + GST tax#}
    {#total due = difference payable + finance contract +misc1 + misc 2 +taxes payd total - lien on trade in#}
    {#payable on delivery = total due - less trade in  tax - less deposit#}
    {#total balance due = payable on delivery - ballance to finance+life insurance+disabilite insurance#}


    $scope.calculateTosTotal = function () {
        console.log("ANGUAR CALCULATE tos total");
        res1 = (parseFloatx($scope.sale_price) + parseFloatx($scope.admin_fee) + parseFloatx($scope.warranty) + parseFloatx($scope.protection_pkg));
        $scope.tos_total = parseFloatx(res1).toFixed(2);
        console.log("tos_total=sale_price+admin_fee+warranty+protection_pkg=" + parseFloatx($scope.sale_price) + "+" + parseFloatx($scope.sale_price) + "+" + parseFloatx($scope.warranty) + "+" + parseFloatx($scope.protection_pkg) + "=" + $scope.tos_total);
    }
    $scope.calculateDiffPayable = function () {
        console.log("ANGUAR CALCULATE calculateTotalBalanceDue");
        difference_payable = $scope.tos_total - parseFloatx($scope.less_trade_in);
        $scope.difference_payable = difference_payable.toFixed(2);
        console.log("difference_payable=tos_total-less_trade_in=" + parseFloatx($scope.tos_total) + "-" + parseFloatx($scope.less_trade_in) + "=" + $scope.difference_payable);

    }
    $scope.calculateTaxesPaidTotal = function () {
        console.log("ANGUAR CALCULATE calculateTaxesPaidTotal");
        //taxes_paid_total = parseFloatx($scope.tax1) + parseFloatx($scope.tax2) + parseFloatx($scope.tax3) + parseFloatx($scope.other_misc1) + parseFloatx($scope.other_misc2);
        taxes_paid_total = parseFloatx($scope.other_misc1) + parseFloatx($scope.other_misc2);
        $scope.taxes_paid_total = taxes_paid_total.toFixed(2);
        //console.log("taxes_paid_total=tax1+tax2+tax3+other_misc1+other_misc2=" + parseFloatx($scope.tax1) + "+" + parseFloatx($scope.tax2) + "+" + parseFloatx($scope.tax3) + "+" + parseFloatx($scope.other_misc1) + "+" + parseFloatx($scope.other_misc2) + "=" + $scope.taxes_paid_total);
        console.log("taxes_paid_total=other_misc1+other_misc2=" + parseFloatx($scope.other_misc1) + "+" + parseFloatx($scope.other_misc2) + "=" + $scope.taxes_paid_total);

    }
    $scope.calculateTotalDue = function () {
        console.log("ANGUAR CALCULATE calculateTotalBalanceDue");
        res2 = (parseFloatx($scope.difference_payable) + parseFloatx($scope.tax1) + parseFloatx($scope.tax2)+ parseFloatx($scope.tax3) + parseFloatx($scope.taxes_paid_total) - parseFloatx($scope.less_trade_in));
        $scope.total_due = parseFloatx(res2).toFixed(2);
        console.log("total_due=difference_payable+tax1+tax2+tax3-less_trade_in+taxes_paid_total=" + parseFloatx($scope.difference_payable)+"+"+ parseFloatx($scope.tax1)+"+"+ parseFloatx($scope.tax2)+"+"+ parseFloatx($scope.tax3) + "-" + parseFloatx($scope.less_trade_in) + "+" + parseFloatx($scope.taxes_paid_total) + "=" + parseFloatx($scope.total_due));
    }
    $scope.calculatePayableOnDelivery = function () {
        payable_on_delivery = parseFloatx($scope.total_due) - parseFloatx($scope.less_trade_in_tax) - parseFloatx($scope.less_deposit);
        $scope.payable_on_delivery = payable_on_delivery.toFixed(2)
        console.log("payable_on_delivery=total_due-less_trade_in_tax-less_deposit=" + parseFloatx($scope.total_due) + "-" + parseFloatx($scope.less_trade_in_tax) + "-" + parseFloatx($scope.less_deposit) + "=" + $scope.payable_on_delivery);

    }

    $scope.calculateTotalBalanceDue = function () {
        console.log("ANGUAR CALCULATE calculateTotalBalanceDue");
        total_balance_due = parseFloatx($scope.payable_on_delivery) - parseFloatx($scope.balance_to_finance) + parseFloatx($scope.life_insurance) + parseFloatx($scope.disability_insurance);
        $scope.total_balance_due = total_balance_due.toFixed(2);
        console.log("total_balance_due=payable_on_delivery-balance_to_finance+life_insurance+disability_insurance=" + parseFloatx($scope.payable_on_delivery) + "-" + parseFloatx($scope.balance_to_finance) + "+" + parseFloatx($scope.life_insurance)+ "+" + parseFloatx($scope.disability_insurance) + "=" + $scope.total_balance_due);

    }

    $scope.calculateTaxes = function () {
        console.log("ANGUAR CALCULATE calculateTotalBalanceDue");
        $scope.other_misc1 = parseFloatx(($scope.difference_payable * 0.06)).toFixed(2);
        $scope.other_misc2 = parseFloatx(($scope.difference_payable * 0.05)).toFixed(2);
        console.log("other_misc1=difference_payable*0.06=" + parseFloatx($scope.difference_payable) + "* 0.06 =" + $scope.other_misc1);
        console.log("other_misc2=difference_payable*0.05=" + parseFloatx($scope.difference_payable) + "* 0.05 =" + $scope.other_misc2);
    }

    $scope.$watch("[sale_price,admin_fee,warranty,protection_pkg]", function (newValue, oldValue) {
        console.log("ANGUAR $watch");
        if (angular.isDefined($scope.sale_price) && $scope.sale_price.length > 0) {
            console.log("ANGUAR $watchinside");
            $scope.calculateTosTotal();
        }
    });
    $scope.$watch("[less_trade_in,tos_total]", function (newValue, oldValue) {
        if (angular.isDefined($scope.sale_price) && $scope.sale_price.length > 0) {
            $scope.calculateDiffPayable();
        }
    });
    $scope.$watch("[other_misc1,other_misc1]", function (newValue, oldValue) {
        if (angular.isDefined($scope.sale_price) && $scope.sale_price.length > 0) {
            $scope.calculateTaxesPaidTotal();
        }
    });
    $scope.$watch("[tos_total,less_trade_in,tax1,tax2,tax3,other_misc1,other_misc2,lien_on_trade_in]", function (newValue, oldValue) {
        if (angular.isDefined($scope.sale_price) && $scope.sale_price.length > 0) {
            $scope.calculateTotalDue();
        }
    });
    $scope.$watch("[tos_total,less_trade_in_tax,less_deposit]", function (newValue, oldValue) {
        if (angular.isDefined($scope.sale_price) && $scope.sale_price.length > 0) {
            $scope.calculatePayableOnDelivery();
        }
    });
    $scope.$watch("[tos_total,less_trade_in_tax,less_deposit,balance_to_finance,life_insurance,disability_insurance]", function (newValue, oldValue) {
        if (angular.isDefined($scope.sale_price) && $scope.sale_price.length > 0) {
            $scope.calculateTotalBalanceDue();
        }
    });
    $scope.$watch("[tax1,tax2,tax3,other_misc1,other_misc2]", function (newValue, oldValue) {
        if (angular.isDefined($scope.sale_price) && $scope.sale_price.length > 0) {
            $scope.calculateTaxesPaidTotal();
        }
    });
    {% if template is defined and template=="template3" %}
    $scope.$watch("[difference_payable]", function (newValue, oldValue) {
        if (angular.isDefined($scope.sale_price) && $scope.sale_price.length > 0) {
            $scope.calculateTaxes();

        }
    });
    {% endif %}
});

app.config(function ($interpolateProvider) {
    $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
});

$(function () {

    $('.datepicker').datepicker({dateFormat: 'yy-dd-mm'});

    if ($(".datepicker").val() == "") {
        $('.datepicker').datepicker('setDate', new Date());
    }
    $('form[name="numa_doadmsbundle_billing"]').submit(function () {
        return false; // return false to cancel form action
    });


});

