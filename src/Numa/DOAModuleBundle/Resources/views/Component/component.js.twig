{% set apicall="/api/component/all" %}
{% if is_granted('ROLE_BUSINES') %}
{% set apicall="/api/component/"~entity.id~"/page" %}
{% endif %}
var app = angular.module('app', ['angular-loading-bar', 'ngTouch', 'ngAnimate', 'ui.grid', 'ui.grid.moveColumns', 'ui.grid.resizeColumns', 'ui.grid.selection', 'ui.grid.expandable', 'ui.bootstrap', 'ui.grid.pinning']);

app.config(function ($interpolateProvider) {
    $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
});

app.controller('MainCtrl', ['$scope', '$http', '$log', '$timeout', 'uiGridConstants', '$q', '$uibModal', function ($scope, $http, $log, $timeout, uiGridConstants, $q, $uibModal) {
    $scope.gridOptions = {
        enableSorting: true,
        showGridFooter: true,
        enableFiltering: true,
        enableRowSelection: true,
        enableSelectAll: true,
        selectionRowHeaderWidth: 35,
        rowHeight: 50,
        enableColumnResizing: true,
    };
    $scope.gridOptions.multiSelect = true;
    $scope.gridOptions.columnDefs = [
        {name: 'name', enableColumnResizing: true, width: 150},
        {name: 'type', enableColumnResizing: true, width: 200},
        {name: 'value', enableColumnResizing: true, width: 400},

        //{name:'Actions',enableFiltering: false,cellTemplate:'<div><button ng-click="grid.appScope.doSomething(row)" class="btn btn-primary">Edit</button></div>'}
        {
            name: 'Actions',
            width: 130,
            enableColumnMenu: false,
            enableSorting: false,
            enableFiltering: false,
            cellTemplate: '<a href="/dms/component/{[{row.entity.id}]}/edit" class="btn btn-primary" data-toggle="tooltip" title="Edit"><span class="glyphicon glyphicon-edit"/></a><a class="btn btn-info" ng-if="row.entity.helpdesc !== undefined && row.entity.helpdesc !== \'\'" ng-click="grid.appScope.clickHelp(row)"><i class="glyphicon glyphicon-info-sign"></i>Help</a>'
        }

    ];

    $scope.items = ['item1', 'item2', 'item3'];

    $scope.animationsEnabled = true;

    $scope.delete = function (row) {
        console.log(row.entity.id);
        var modalInstance = $uibModal.open({
            animation: $scope.animationsEnabled,
            templateUrl: 'myModalContent.html',
            controller: 'ModalInstanceCtrl',

            resolve: {
                items: function () {
                    return $scope.items;
                }
            }
        });

        modalInstance.result.then(function (selectedItem) {
            //ok

            $http.delete('/dms/pages/' + row.entity.id + "/delete", {timeout: canceler.promise})
                    .success(function (data) {
                        var index = $scope.gridOptions.data.indexOf(row.entity);
                        $scope.gridOptions.data.splice(index, 1);
                    });
        }, function () {
            //cancel
        });


    }
    $scope.clickHelp = function (row) {

        var modalInstance = $uibModal.open({
            animation: $scope.animationsEnabled,
            templateUrl: 'myModalContent.html',
            controller: 'ModalInstanceCtrl',

            resolve: {
                params: function () {
                    $log.log(row);
                    return row.entity.helpdesc;
                }
            }
        });
    };

    var canceler = $q.defer();
    $http.get('{{ apicall }}', {timeout: canceler.promise})
            .success(function (data) {
                $scope.gridOptions.data = data;
            });

    $scope.$on('$destroy', function () {
        canceler.resolve();  // Aborts the $http request if it isn't finished.
    });

    $scope.gridOptions.onRegisterApi = function (gridApi) {
        //set gridApi on scope
        $scope.gridApi = gridApi;
        gridApi.selection.on.rowSelectionChanged($scope, function (row) {
            var msg = 'row selected ' + row.isSelected;
            $log.log(msg);
        });

        gridApi.selection.on.rowSelectionChangedBatch($scope, function (rows) {
            var msg = 'rows changed ' + rows.length;
            $log.log(msg);
        });
    };
}]);
app.controller('ModalInstanceCtrl', function ($scope, $uibModalInstance,$sce,params) {

    //$scope.help = params;
    $scope.helpdesc =  $sce.trustAsHtml(params);

    $scope.cancel = function () {
        $uibModalInstance.dismiss('cancel');
    };
});